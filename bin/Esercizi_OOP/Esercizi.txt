Creare una Calsse Studente con: Nome Cognome Matricola
Creare il costruttore della classe 
Creare il metodo Saluta ritorno Ciao dallo studente nome

Esercizio 2: 
Creare una classe Libro con campi titolo, autore e anno di pubblicazione.
Creare i metodo get e set delle proprietà.
Creare il metodo toString()
Creare il costruttore


Esercizio 3:
Creare la classe per le operazioni sul rettangolo.
Le proprietà saranno base e altezza e sono di tipo double
Oltre ai classici get e ste e toString creare i metodi per il calcolo dell'area e del perimetro
Controllare se i valori inseriti come base e altezza siano positivi (chi vuole può usare l'operatore ternario)
Se il valore inserito è da 0 inpoi applica il valore inserito altrimenti inserisce il valore assoluto del numero

Esercizio 4:

/*
        Creare una classe ContoCorrente in grado di simulare un conto corrente reale,
        quindi con versamenti, prelievi, stampa saldo e la lista degli ultimi 5 movimenti.
        Costruttore: Saldo iniziale, Proprietario, N° Conto

        Far partire una schermata con le opzioni es:
        Benvenuto nel tuo conto
        1) Versa
        2) Preleva
        3) Saldo Attuale
        4) Ultimi 5 movimenti
        5) Info Conto (Restituisce Proprietario e N° Conto)
        0) Esci
     */

     
Esercizio 5:
Creare una classe Contatore con un campo valore e metodi per incrementare e decrementare il valore:
soluzione es 7: https://codegrind.it/esercizi/java/classi


Esercizio 6:
E' necessario scrivere una applicazione che simula il funzionamento di un frammento del sistema
informativo di un operatore di telefonia cellulare.

Si devono quindi rappresentare i dati relativi ad una carta SIM ed in particolare:
- il numero di telefono
- il credito disponibile in euro
- la lista delle telefonate effettuate

Per ciascuna telefonata deve essere rappresentata la durata in minuti

La classe SIM dovrà fornire le seguenti funzionalità:
- un costruttore parametrizzato che crea una SIM con numero di telefono, un credito e
la lista delle telefonate vuota

- un metodo per l'inserimento di una telefonata con i dati forniti dall'utente.

- una funzione per il calcolo dei minuti totali di conversazione.

- una funzione per il calcolo delle telefonate effettuate verso un certo numero 

- una procedura per la stampa dei dati della SIM e l'elenco delle telefonate.

*********
EREDITARIETA'
*********

Esercizio7

Parte 1
Il gestore di un negozio associa a tutti i suoi Prodotti un codice a barre univoco, una descrizione sintetica 
del prodotto e il suo prezzo unitario. Realizzare una classe Prodotti con le opportune variabili d'istanza e metodi get e 
toString().

Parte 1b
Aggiungere alla classe Prodotti un metodo applicaSconto che modifica il prezzo del prodotto diminuendolo del 5%.

Parte 2
Il gestore del negozio vuole fare una distinzione tra i prodotti Alimentari e quelli Non Alimentari . 
Ai prodotti Alimentari viene infatti associata una data di scadenza (si veda la classe Data), 
mentre a quelli Non Alimentari il materiale principale di cui sono fatti. 
Realizzare le sottoclassi Alimentari e NonAlimentari estendendo opportunamente la classe Prodotti.
Per la classe Alimentari creare il metodo stampa scadenza che stampi la data in:
 nome_giorno, numero giorno, mese esteso e anno (martedì, 15 maggio 2024)

Parte 3
Modificare le due sottoclassi dell'esercizio 2 specializzando il metodo applicaSconto in modo che nel caso dei prodotti 
Alimentari venga applicato uno sconto del 20% se la data di scadenza è a meno di 10 giorni dalla data attuale 
(si usi il metodo getDifference della classe Data), mentre nel caso dei prodotti Non Alimentari venga applicato uno 
sconto del 10% se il prodotto è composto da un materiale riciclabile (carta, vetro o plastica).

Parte 4
Realizzare una classe ListaSpesa che chieda all'utente di inserire i prodotti acquistati e calcoli 
il totale della spesa applicando gli opportuni sconti se il cliente ha la tessera fedeltà.


